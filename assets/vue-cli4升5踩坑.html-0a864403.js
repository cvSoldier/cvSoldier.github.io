import{_ as t,W as o,X as c,Y as s,Z as n,$ as e,a0 as p,C as i}from"./framework-c8ebc670.js";const l={},r=p(`<blockquote><p>升级原因：webpack5 的 cache 太太太香了</p></blockquote><h3 id="_1、npm-run-build-执行两遍打包" tabindex="-1"><a class="header-anchor" href="#_1、npm-run-build-执行两遍打包" aria-hidden="true">#</a> 1、npm run build 执行两遍打包</h3><p>vue-cli5 默认会为现代浏览器额外打一个 <code>&lt;script type=&quot;module&quot;&gt;</code> 里面使用的包，在cli定义build命令的代码里可以看到：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>api<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">&#39;build&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
   <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;build for production&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">usage</span><span class="token operator">:</span> <span class="token string">&#39;vue-cli-service build [options] [entry|pattern]&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token string-property property">&#39;--no-module&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">build app without generating &lt;script type=&quot;module&quot;&gt; chunks for modern browsers</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以package中build命令改为 <code>vue-cli-service build --mode production --no-module</code> 即可。</p><h3 id="_2、hard-source-webpack-plugin" tabindex="-1"><a class="header-anchor" href="#_2、hard-source-webpack-plugin" aria-hidden="true">#</a> 2、hard-source-webpack-plugin</h3><p>直接删掉就可以了，webpack5 的强大缓存，可以保证开发环境的二次构建速度直接起飞🛫️。</p><h3 id="_3、prerender-spa-plugin" tabindex="-1"><a class="header-anchor" href="#_3、prerender-spa-plugin" aria-hidden="true">#</a> 3、prerender-spa-plugin</h3>`,8),u={href:"https://github.com/webpack/webpack/pull/9251",target:"_blank",rel:"noopener noreferrer"},d=s("br",null,null,-1),k=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// es6/index.js</span>
<span class="token keyword">const</span> compilerFS <span class="token operator">=</span> compiler<span class="token punctuation">.</span>outputFileSystem

<span class="token keyword">const</span> <span class="token function-variable function">mkdirp</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dir<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    compilerFS<span class="token punctuation">.</span><span class="token function">mkdirp</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> opts<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> made</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span>made<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以就报错了，compilerFS 这个对象上已经没有 mkdirp 了，联系上下文这个函数的作用是递归创建目录，因为一般情况下，webpack的 <code>compiler.outputFileSystem</code> 就是 node 的fs，所以可以替换为 <code>compilerFS.mkdir()</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>compilerFS<span class="token punctuation">.</span>mkdir <span class="token operator">===</span> fs<span class="token punctuation">.</span>mkdir <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要注意的是 fs.mkdir 默认不能递归创建目录，需要携带 <code>{ recursive: true }</code> 选项，来实现类似 <code>mkdir(&#39;/不存在的目录1/不存在的目录2&#39;, opts, () =&gt; {})</code> 的调用。<br> 又因为 prerender-spa-plugin 这个库已经没人维护了，所以只能用patch-package去修改node_modules，修改后的代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">mkdirp</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dir<span class="token punctuation">,</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    compilerFS<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> opts<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> made</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> err <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span>made<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、preloadplugin" tabindex="-1"><a class="header-anchor" href="#_4、preloadplugin" aria-hidden="true">#</a> 4、PreloadPlugin</h3>`,6),m={href:"https://github.com/vuejs/vue-cli/issues/7206",target:"_blank",rel:"noopener noreferrer"};function v(b,g){const a=i("ExternalLinkIcon");return o(),c("div",null,[r,s("p",null,[n("这个错误是webpack5的 "),s("a",u,[n("filesystem"),e(a)]),n(" 重构导致的：“mkdirp is no longer expected to be a function on the output file system”。"),d,n(" 同时 prerender-spa-plugin 代码是依赖 mkdirp 这个api的：")]),k,s("p",null,[n("cli5关闭了preload插件，"),s("a",m,[n("有issue要打开，"),e(a)]),n("但是不知道为啥没开。（小声bb：虽然vue-cli的README标明了项目处于维护模式，但是到目前（10月12号）为止最近的一次提交还是9月4号，我寻思这也妹维护啊）")])])}const _=t(l,[["render",v],["__file","vue-cli4升5踩坑.html.vue"]]);export{_ as default};
